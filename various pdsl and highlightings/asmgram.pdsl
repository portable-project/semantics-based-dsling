[RootRule(listing)]
[FileExtension('.asm')]
[OmitPattern("[\s]+")]
Asm {

	name: "[a-zA-Z_][a-zA-Z_0-9]*";
	number: "[0-9]+";
	hex: "0x[a-fA-F0-9]+";
	complexName: name ('.' name)*;

    listing: segdef*;

    segdef: 'segment' name bitwise '\n' content 'endseg' {
        bitwise: {
            |bits16: 'bits16';
            |bits32: 'bits32';
        };
    };

    content: (clabel centry)* {
        centry: {
            |instruction: mnemonic args {
                #mnemonic: name;
                args: (expr (',' expr)+)?;
            };
            |data: sizeSpec list {
                sizeSpec: {
                    |byte: 'db';
                    |word: 'dw';
                    |dword: 'dd';
                    |qword: 'dq';
                };
                list: (const|name)+;
            };
        };
        clabel: label?;
    };

	label: name ':';

    expr: {
		|ptr: '[' regName ']';
		|ptrOff: '[' regName '+' const ']';
		|ptrPtrOff: '[' regName '+' regName '+' const ']';
		|ptrPtrScale: '[' regName '+' regName '*' const ']';
		|ptrPtrScaleOff: '[' regName '+' regName '*' const '+' const ']';
		|const: hex|number;
		|identifier: name; /* 'eax'|'ebx'|'ecx'|'edx'; */
	};
}
